//////////////////////////////////////////////////////////////////////////////
////////////     Create by S.P.S 2012(c)                 		 /////////////
//////////////////////////////////////////////////////////////////////////////
////////////                                                     /////////////
////////////     Тест светодиодной линейки на 3х регистрах       /////////////
////////////                                                     /////////////
//////////////////////////////////////////////////////////////////////////////

			.include "tn13def.inc"	; Используем ATMega8
			.include "macro.asm"	; Все макросы у нас тут
			.include "shift164_macro.asm"
//--------------------------------------------------------

; RAM =====================================================
			.DSEG					; Оперативка 

			.include "init_sh164.asm"

//////////////////////////////////////////////////////////////////////////////
////////////                      MINI SOURCE                    /////////////
//////////////////////////////////////////////////////////////////////////////

	.def 	En 		= R20		; Энергия (высота подскока)
	.def	POS	 	= R21		; Позиция
	.def 	dCOUNT  = R22		; регистр пересчета
	.def 	dBUF1   = R23		; Буфер пересчета 1
	.def 	dBUF2   = R24		; Буфер пересчета 2
	.def 	dBUF3   = R25		; Буфер пересчета 3
	.def 	pBUF    = R26		; Буфер позиции

//////////////////////////////////////////////////////////////////////////////

; FLASH ===================================================
			.CSEG

//////////////////////////////////////////////////////////////////////////////
////////////                   PROGRAMM INIT                     /////////////
//////////////////////////////////////////////////////////////////////////////			


Reset:	//	ldi r16, high(RAMEND)
 		//	out SPH,r16 
 			ldi r16, low(RAMEND)
 			out SPL,r16
			
			.include "initial.asm"			; Все инициализации тут.

			sei 

//////////////////////////////////////////////////////////////////////////////
////////////             		                	             /////////////
//////////////////////////////////////////////////////////////////////////////
preset:

	LDI R17,1				;Ставим один бит в начале 1го буфнера

start:
	
	
	MOV	POS,R17
	RCALL DOTCONV			;Пересчитываем положение и выводим бит
	DDLOOP	1,155,155

	INC	R17					;Сдвигаем позицию бита
	CPI	R17,25
	BREQ preset

RJMP start

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////
.include "shift164.asm"	
/////////////////////////////////////////////////////////////////
//////////////////////   ФУНКЦИИ   //////////////////////////////
/////////////////////////////////////////////////////////////////
DOTCONV:
//----------------------------- подготовка ----------------------
	CLR	dCOUNT

	CLR	dBUF1
	CLR	dBUF2
	CLR	dBUF3

	SBR	dBUF1,1<<0

	LDI	R16,24
	SUB	R16,POS
	MOV POS,R16
//----------------------------- пересчет ------------------------
sr:	
	CP	dCOUNT,POS
	BREQ showd

	inc	dCOUNT

	CPI	dCOUNT,8
	BREQ	jb2

	LSL dBUF1

	RJMP sr
////////////////////////////////////////////////
jb2: 

	CLR	dBUF1
	SBR	dBUF2,1<<0
//------------------------
sr2:
	CP	dCOUNT,POS
	BREQ showd

	inc	dCOUNT

	CPI	dCOUNT,16
	BREQ	jb3

	LSL dBUF2

	RJMP sr2

jb3:

	CLR	dBUF2
	SBR	dBUF3,1<<0
//------------------------
sr3:
	CP	dCOUNT,POS
	BREQ showd

	inc	dCOUNT

	LSL dBUF3

	RJMP sr3

showd:

	OUTRsBUF	0,dBUF1
	OUTRsBUF	1,dBUF2
	OUTRsBUF	2,dBUF3

	RCALL	SHIFTOUT				;Шлем содержимое буферов по последовательному каналу

RET

; EEPROM ==================================================
		.ESEG			; Сегмент EEPROM  
