//////////////////////////////////////////////////////////////////////////////
////////////     Create by S.P.S 2012(c)              		 /////////////
//////////////////////////////////////////////////////////////////////////////
////////////                                                     /////////////
////////////     Библиотека для сдвиговых         				 /////////////
////////////     регистров 74HC164.    	                         /////////////
////////////                                                     /////////////
//////////////////////////////////////////////////////////////////////////////
////////////                                                     /////////////
////////////     Тут обрабатывается содержимое буфера     		 /////////////
////////////     и последовательно выводится через порт.     	 /////////////
////////////                                                     /////////////
//////////////////////////////////////////////////////////////////////////////
////////////                                                     /////////////
////////////     Расположение: в конце программы, перед   .ESEG  /////////////
////////////                                                     /////////////
//////////////////////////////////////////////////////////////////////////////
/*


	bufsize	 ; размер буфера отправки
			 ; напр. для буфера в 14 бит нужно выделить 2 байта
	
	shport 	 ; PORTx потра к которому подключен сдвиговый регистр
	shpin 	 ; PINx потра к которому подключен сдвиговый регистр
	shddr 	 ; DDRx потра к которому подключен сдвиговый регистр
	shbit	 ; Вывод данных
	clbit	 ; Стробирующий вывод


	BTCOUNT	 ; Счетчик бит 		0..7
	BUFCOUNT ; Счетчик буфера 	0..bufsize
	BUFREG   ; промежуточный буфер-регистр

	 
	 sBUF	 ; sBUF - буфера отправки
			 ; Сюда ложим то что хотим отправить

*/
SHIFTOUT:
//////////////////////////////////////////////////////////////////////////////
	
	SETSB	shddr,shbit		; Настр. линии данных на выход
	SETSB	shddr,clbit		; Настр. линии строба на выход

	CLRSB	shport,shbit	; линия данных [0]
	CLRSB	shport,clbit	; линия строба [0]

	PUSH	BTCOUNT			; #1 скукожили cчетчик бит
	PUSH	BUFCOUNT		; #2 скукожили cчетчик буфера
	PUSH	BUFREG			; #3 скукожили промежуточный буфер-регистр

	CLR		BTCOUNT			; чистим cчетчик бит
	CLR		BUFCOUNT		; чистим cчетчик буфера
	CLR		BUFREG			; чистим промежуточный буфер-регистр

	LDI		YL,	low(sBUF)	; Берем адрес буфера
	LDI 	YH,	High(sBUF)

//////////////////////////////////////////////////////////////////////////////	

BYTESO:	CPI		BUFCOUNT,bufsize; а не в конце ли мы буфера?
		BREQ	REXIT			; в конце - значит все ушло пора отсюда сваливать		

		CLR		BTCOUNT			; чистим cчетчик бит
		LD		BUFREG, Y+		; Забрали байт из буфера

BITOUT:	CLRSB	shport,clbit	; линия строба [0] [/\/\/]

		SBRS	BUFREG,0		; проверка бита (0/1)
		RJMP	LOO
		RJMP	HIO
		
LOO:	CLRSB	shport,shbit	; линия данных [0]
		RJMP	exo

HIO:	SETSB	shport,shbit	; линия данных [1]

exo:	SETSB	shport,clbit	; линия строба [1] [/\/\/]

		ROR		BUFREG			; ставим следующий бит на отправку
		INC		BTCOUNT			; бит отправили - счетчик плюсанули
		
		CPI		BTCOUNT,8		; а не порали второй байт загребать?
		BRNE	BITOUT			; не, не пора(

		INC		BUFCOUNT		; байт отправили - счетчик плюсанули
				
		RJMP	BYTESO			; пора)

REXIT:	CLRSB	shport,clbit	; линия строба [0]

		POP		BUFREG			; #3 расскукожили промежуточный буфер-регистр
		POP		BUFCOUNT		; #2 расскукожили cчетчик буфера
		POP		BTCOUNT			; #1 расскукожили cчетчик бит
//////////////////////////////////////////////////////////////////////////////	
RET
